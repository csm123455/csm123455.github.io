export const projectsData = [
    {
        id: 1,
        title: "Map.zip: 장거리 이동 맞춤형 AI 맛집 추천 서비스",
        image: "/images/mapzip.jpg",
        detailImage: "/images/mapzipviewdetail.jpg",
        description: "MSA 구조와 AI 추천 시스템을 결합하여, 사용자의 장거리 이동 경로와 스케줄에 최적화된 맛집을 추천하는 플랫폼을 구축했습니다.",
        details: [
            "🛠 사용 기술",
            "- Frontend: React",
            "- Backend: Java Spring Boot, PostgreSQL, Valkey, DynamoDB",
            "- Cloud & Infra: AWS (EKS, MSK, Bedrock, AuroraDB, ElastiCache, S3, CloudFront), Kubernetes",
            "- DevOps & IaC: Terraform, GitHub Actions, ArgoCD, Istio, Docker",
            "- API & Etc: gRPC, Kafka, Google Vision API, K6",
            "",
            "✨ 주요 기능",
            "- 스케줄 기반 이동 경로 및 식사 시점 위치 예측",
            "- 사용자 맞춤형 AI 맛집 추천 (AWS Bedrock)",
            "- 영수증 OCR 검증을 통한 신뢰성 있는 리뷰 시스템",
            "- Kafka(MSK)를 활용한 추천 결과 비동기 처리",
            "",
            "🧑‍💼 담당 역할",
            "리뷰(Review) 서버의 풀스택 개발과 데이터 인프라 구축을 총괄했습니다.",
            "- 리뷰 서버 풀스택 개발: 리뷰 기능의 백엔드 API와 프론트엔드 UI/UX 구현",
            "- 영수증 OCR 검증 기능: Google Vision API를 연동하여 영수증 기반의 신뢰도 높은 리뷰 시스템 구축",
            "- 데이터 인프라 구축: Terraform을 활용해 DynamoDB, ElastiCache(Valkey), MSK 인프라 설계 및 구축",
            "- 성능 테스트: K6를 이용해 리뷰 서버의 주요 API에 대한 성능 및 부하 테스트 수행",
            "",
            "📅 개발 기간",
            "2025.07.16 ~ 2025.08.22",
            "",
            "📚 배운 점",
            "MSA 환경에서 데이터 인프라 구축과 풀스택 개발을 담당하며 시스템 전체를 보는 시각을 길렀습니다. Terraform(IaC)을 통해 MSK, DynamoDB 등 AWS 리소스를 코드로 관리하며 자동화된 인프라의 중요성을 체감했고, DynamoDB의 GSI를 활용해 쿼리 성능을 최적화하는 경험을 했습니다. 데이터 처리 파이프라인 설계부터 성능 테스트, 안정적인 서비스 운영까지 아우르는 엔지니어링 역량을 쌓을 수 있었습니다."
        ],
        githubLinks: [
            { name: "App", url: "https://github.com/CLD3rd-Team4/App" },
            { name: "Infra", url: "https://github.com/CLD3rd-Team4/Infra" },
        ],
        notionUrl: "https://www.notion.so/likelion/1f444860a4f480339472e6f8743816aa?p=25344860a4f480e994e7ea34ff53a849&pm=s",
        presentationPdfUrl: "/pdf/mapzip.pdf",
        demo: "https://mapzip.vercel.app/",
    },
    {
        id: 2,
        title: "Jazz LP E-commerce Platform: 재즈 LP 중고거래 플랫폼",
        image: "/images/jazz.jpg",
        description: "재즈 LP 매니아를 위한 중고거래 플랫폼을 구축하고, 안정적인 서비스 운영을 위해 CI/CD 배포 자동화 파이프라인을 설계했습니다.",
        details: [
            "🛠 사용 기술",
            "- Frontend: React",
            "- Backend: Spring Boot, Java",
            "- Cloud & Infra: AWS (EKS, EC2, ECR, S3), Kubernetes, Docker",
            "- DevOps & IaC: Terraform, ArgoCD, GitHub Actions",
            "",
            "✨ 주요 기능",
            "- 재즈 LP 상품 등록 및 중고거래 기능",
            "- S3를 활용한 LP 커버 등 이미지 에셋 관리",
            "- GitOps(ArgoCD) 기반의 CI/CD 파이프라인을 통한 배포 자동화",
            "",
            "🧑‍💼 담당 역할",
            "프로젝트의 핵심 AWS 클라우드 인프라 구축 및 운영을 담당했습니다.",
            "- 컨테이너 환경 구축: 애플리케이션 배포를 위한 EKS 클러스터와 EC2 워커 노드를 설계하고 구축했습니다.",
            "- 컨테이너 이미지 관리: CI 파이프라인과 연동하여 Docker 이미지를 저장하고 관리하기 위한 ECR 리포지토리를 구성했습니다.",
            "- 정적 자산 스토리지 구축: 사용자가 업로드하는 LP 커버 이미지를 관리하기 위해 S3 버킷을 설계하고 애플리케이션과 연동했습니다.",
            "",
            "📅 개발 기간",
            "2025.05.28 ~ 2025.07.15",
            "",
            "📚 배운 점",
            "Terraform을 사용하여 EKS, ECR, S3 등 AWS 핵심 인프라를 코드로 관리(IaC)하며, 재현 가능하고 안정적인 인프라 구축의 중요성을 배웠습니다. 애플리케이션이 컨테이너화되어 ECR에 저장되고, EKS 클러스터에 배포되기까지의 전체 파이프라인을 고려하여 인프라를 설계하며 Kubernetes와 AWS 생태계에 대한 깊은 이해를 얻었습니다."
        ],
        githubLinks: [
            { name: "Infra", url: "https://github.com/CLD-3rd/team1-infra/tree/dev" },
            { name: "Manifest", url: "https://github.com/CLD-3rd/team1-manifest/tree/dev" },
        ],
        notionUrl: "https://www.notion.so/likelion/1f444860a4f480339472e6f8743816aa?p=22a44860a4f4803bb60cf51c5424d90f&pm=c",
        presentationPdfUrl: null,
        demo: "https://jazz.vercel.app/",
    },
    {
        id: 3,
        title: "Smokezone: 흡연구역 정보 공유 애플리케이션",
        image: "/images/smokezone.jpg",
        detailImage: "/images/smokezoneviewdetail.jpg",
        description: "Kotlin으로 안드로이드 앱을 개발하고 Spring Boot로 백엔드 서버를 구축하여, 사용자 참여형 흡연구역 정보 공유 서비스를 완성했습니다.",
        details: [
            "🛠 사용 기술",
            "- Frontend (Mobile): Android (Kotlin)",
            "- Backend: Spring Boot, Java",
            "- Database: MySQL",
            "- Authentication: JWT (JSON Web Token)",
            "- Deployment: AWS EC2",
            "",
            "✨ 주요 기능",
            "- JWT 토큰 기반의 사용자 회원가입 및 로그인",
            "- 지도 기반 흡연구역 위치 조회 및 정보 CRUD",
            "- 흡연구역에 대한 사용자 리뷰 및 평가 기능",
            "",
            "🧑‍💼 담당 역할",
            "안드로이드 클라이언트를 제외한 백엔드 시스템의 전체 설계, 개발 및 배포를 총괄했습니다.",
            "- API 서버 개발: Spring Boot를 사용하여 사용자 관리, 흡연구역 정보 CRUD, 리뷰 기능 등 서비스의 모든 RESTful API를 개발했습니다.",
            "- 데이터베이스 설계: 사용자, 흡연구역, 리뷰 데이터를 효율적으로 관리하기 위한 데이터베이스 스키마를 설계했습니다.",
            "- 인증 시스템 구축: JWT를 활용하여 모바일 앱 환경에 적합한 안전한 인증 및 인가 시스템을 구현했습니다.",
            "- 서버 배포 및 관리: 개발된 백엔드 서버를 AWS EC2 환경에 배포하고 운영했습니다.",
            "",
            "📅 개발 기간",
            "2025.03.08 ~ 2025.06.10",
            "",
            "📚 배운 점",
            "백엔드 시스템의 A to Z를 책임지며 서비스의 근간을 만드는 경험을 했습니다. 모바일 클라이언트를 고려한 RESTful API 설계 능력을 길렀고, JWT 기반 인증 시스템을 직접 구축하며 보안의 중요성을 체감했습니다. 데이터베이스 설계부터 서버 배포까지 모든 과정을 주도하며 백엔드 시스템을 독립적으로 구축하고 운영하는 역량을 길렀습니다."
        ],
        githubLinks: [
            { name: "Smokezone", url: "https://github.com/csm123455/Smokezone" },
        ],
        notionUrl: null,
        presentationPdfUrl: "/pdf/smokezone.pdf",
        demo: "https://smokezone.vercel.app/",
    },
    {
        id: 4,
        title: "Study Room Management: 스터디룸 예약 및 알림 서비스",
        image: "/images/studyroom.jpg",
        description: "스터디룸의 예약 및 관리를 위한 백엔드 시스템을 개발하고, FCM과 이메일을 통해 사용자에게 실시간 예약 알림을 제공하는 기능을 구현했습니다.",
        details: [
            "🛠 사용 기술",
            "- Backend: Spring Boot, Java",
            "- Database: RDBMS (MySQL)",
            "- Notification: Firebase Cloud Messaging (FCM), JavaMail API",
            "",
            "✨ 주요 기능",
            "- 스터디룸 정보 관리 (CRUD)",
            "- 사용자 스터디룸 예약 신청 및 조회",
            "- 관리자용 예약 승인/거절 시스템",
            "- 예약 상태 변경에 따른 실시간 이메일 및 푸시 알림",
            "",
            "🧑‍💼 담당 역할",
            "백엔드 시스템의 핵심인 예약 관리 로직 개발을 총괄했습니다.",
            "- 스터디룸 관리 API: 관리자가 스터디룸 정보를 조회, 등록, 수정, 삭제할 수 있는 CRUD API를 구현했습니다.",
            "- 예약 처리 시스템: 사용자의 예약 신청을 처리하고, 관리자가 이를 승인하거나 거절할 수 있는 로직을 설계했습니다.",
            "- 자동 알림 기능: 예약이 승인되거나 거절될 때, 해당 사용자에게 이메일로 알림을 자동 발송하는 기능을 구현했습니다.",
            "",
            "📅 개발 기간",
            "2025.05.16 ~ 2025.05.21",
            "",
            "📚 배운 점",
            "스터디룸 예약의 전체 생명주기(신청 → 승인/거절 → 알림)를 관리하며 상태 기반의 비즈니스 로직 구현 능력을 길렀습니다. 특히, 예약 상태가 변경될 때마다 이메일로 사용자에게 실시간 피드백을 제공하는 비동기 알림 시스템을 구현하며, 외부 서비스 연동 및 사용자 경험 개선 방법을 익혔습니다. RESTful 원칙에 따라 API를 명확하게 설계하며 백엔드 시스템의 유지보수성과 확장성을 고려하는 경험을 쌓았습니다."
        ],
        githubLinks: [
            { name: "Study Room", url: "https://github.com/CLD-3rd/infra-team4" },
        ],
        notionUrl: "https://www.notion.so/likelion/1f444860a4f480339472e6f8743816aa?p=1f544860a4f48080a2fde7549105b848&pm=c&pvs=25#1f644860a4f4808882aacc41365565be",
        presentationPdfUrl: "/pdf/studyroom.pdf",
        demo: "https://studyroom.vercel.app/",
    },
];